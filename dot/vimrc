" File types
" ============================================================================

" enable file type detection
filetype on

autocmd BufNewFile,BufRead *.{t2t,txt2tags}         set filetype=txt2tags
autocmd BufNewFile,BufRead *.{md,mkd,mark,markdown} set filetype=markdown
autocmd BufNewFile,BufRead *.{tx,txl,text,textile}  set filetype=textile
autocmd BufNewFile,BufRead *.ru                     set filetype=ruby
autocmd BufNewFile,BufRead *.{rd,rdoc}              set filetype=rdoc

" format documents
autocmd FileType txt,txt2tags,markdown,textile set
  \ textwidth=78
  \ shiftwidth=2
  \ expandtab
  \ wrap
  \ wrapscan
  \ wrapmargin=78
  \ formatoptions+=t

" Paths
" ============================================================================

" includes gems path
autocmd FileType ruby set path+=/usr/lib/ruby/gems/*/gems/**

" includes current path
set path+=./**

" adjust tags path
set tags=$HOME/.vim/tags,.

" store backups under $HOME/.vim/backup
set backupdir=$HOME/.vim/backup
set backupskip=/tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*

" keep swp files under $HOME/.vim/swap
set directory=$HOME/.vim/swap/,.,$HOME/tmp,/tmp

" Compilers
" ============================================================================

autocmd BufNewFile,BufRead {test_*,*_test}.rb compiler rubyunit
autocmd FileType txt2tags compiler txt2tags
autocmd FileType ruby     compiler ruby

" use only Bash for shell script
let is_bash=1

" Backups
" ============================================================================

" disable creation of backup files
set nobackup

" do keep a backup while working
set writebackup

" keep attributes of original file
set backupcopy=yes

" Indentation
" ============================================================================

" preserve current indent on new lines
set autoindent

" uses auto-indent when start new line
set smartindent

" indentation levels every two columns
set tabstop=2
set softtabstop=2

" convert all tabs to space
set expandtab

" indent/outdent by two columns
set shiftwidth=2

" indent/outdent to nearest tabstops
set shiftround

" make backspaces delete sensibly
set backspace=indent,eol,start

" no line wraps
set nowrap nowrapscan

" load indentation files
filetype plugin indent on

" Spelling
" ============================================================================

" spell checking
set spell spelllang=en,pt

" UI
" ============================================================================

" adjust color scheme
colorscheme darkdevel

" show line numbers
set number

" enable syntax for buffer
syntax on

set autowrite
set encoding=utf8

" text and file should be encoded UTF-8.
set fileencoding=utf8
setglobal encoding=utf-8
setglobal fileencoding=utf-8

" display incomplete commands
set showcmd

" incremental searching
set incsearch

" highlight search maches
set hlsearch

" show cursor position
set ruler

" turn on menu in command line
set wildmenu
set wildmode=list:longest,full

" show matches in searching
set showmatch

" ignore case for searching
set ignorecase

" duration to show brace matches (1/10)
set matchtime=2

set modeline

" disable arrows in insert mode
inoremap <up>     <nop>
inoremap <right>  <nop>
inoremap <down>   <nop>
inoremap <left>   <nop>

" Windows
" ============================================================================

" split buffers and set half size.
set equalalways

" Trailing whitespaces
" ============================================================================

set listchars=trail:.,tab:▸\ ,eol:¬

nnoremap <leader>l :set list<cr>

" Status line
" ============================================================================

set statusline=\ %Y\ \|\ %{&ff}\ \|\ %04lx%04v/%04p%%\ %L\ \|\ %F%m%=%r%h[%n]\ %{fugitive#statusline()}
set laststatus=2

" Tabs
" ============================================================================

nnoremap <leader>lt    :tabs<cr>
nnoremap <a-[>         :tabprevious<cr>
nnoremap <a-]>         :tabnext<cr>
nnoremap <leader>tf    :tabfirst<cr>
nnoremap <leader>tl    :tablast<cr>

nnoremap <leader>tn    :tabnew<cr>
nnoremap <leader>tq    :tabclose<cr>

nnoremap <a-1> 1gt
nnoremap <a-2> 2gt
nnoremap <a-3> 3gt
nnoremap <a-4> 4gt
nnoremap <a-5> 5gt
nnoremap <a-6> 6gt
nnoremap <a-7> 7gt
nnoremap <a-8> 8gt
nnoremap <a-9> 9gt
nnoremap <a-0> 10gt

" Buffers
" ============================================================================

nnoremap <leader>bs    :buffers<cr>
nnoremap <a-{>         :bprevious<cr>
nnoremap <a-}>         :bnext<cr>

nnoremap <leader>b1    :buffer 1<cr>
nnoremap <leader>b2    :buffer 2<cr>
nnoremap <leader>b3    :buffer 3<cr>
nnoremap <leader>b4    :buffer 4<cr>
nnoremap <leader>b5    :buffer 5<cr>
nnoremap <leader>b6    :buffer 6<cr>
nnoremap <leader>b7    :buffer 7<cr>
nnoremap <leader>b8    :buffer 8<cr>
nnoremap <leader>b9    :buffer 9<cr>
nnoremap <leader>b0    :buffer 10<cr>

" quickly save
nnoremap <f2>   :write<cr>
"nnoremap <f3>   :find<cr>
"nnoremap e      :edit .<cr>

noremap <leader>m   :make %<cr>
noremap <leader>s   :source %<cr>

noremap <leader>evr  :edit $HOME/.vimrc<cr>
noremap <leader>egr  :edit $HOME/.gvimrc<cr>

nnoremap <c-tab> <c-w>w

" TODO files
" ============================================================================

" add tasks
map <leader>at o<esc>:read !date +'\%Y-\%m-\%d'<cr>:read !date +'\%Y-\%m-\%d' \| sed 's/./-/g'<CR>A<CR><ESC>
" new task in new line
map <leader>do o[ ] 
map <leader>dO O[ ] 
" task complete
map <leader>x :s/^\[ \]/[x]/<CR>
map <leader>X :s/^\[x\]/[ ]/<CR>

" Git commits
" ============================================================================

map <leader>co o* 
map <leader>cO O* 
map <leader>cf o* Features<cr>  * 
map <leader>ci o* Improvements<cr>  * 
map <leader>cx o* Fixes<cr>  * 
map <leader>ce o  * 
map <leader>cE O  * 
" commit from file
map <leader>cff :read commit.tmp<cr>

" VimExplorer
" ============================================================================

"let g:VEConf_externalExplorer = "thunar"
let g:VEConf_showHiddenFiles = 0
let g:VEConf_filePanelSortType = 1
let g:VEConf_treeSortDirection = 1

" SuperTab
" ============================================================================

let g:SuperTabDefaultCompletionType = "<c-n>"

" Sessions
" ============================================================================

let g:sessions_project_path = "$HOME/Code/applications:$HOME/Code/resources:$HOME/Code/websites"

" Bash
" ============================================================================

let is_bash=1
map <leader>bsx :!chmod +x %<cr>

