# Rubygems completion

have gem &&
__gem_commands() {
  gem help commands | ruby -ne 'print "#{$1} " if $_ =~ /^\s{4}(\w+)/' | sort
} &&
__gem_options() {
  gem help $1 | ruby -ne 'puts "#{$1} #{$3}".gsub("[no-]","no-") if $_ =~ /^\s{4,8}(-{1,2}(\[no-\])?\w+)[,]? (--(\[no-\])?\w+([-]\w+)?)?/'
} &&
__gem_find() {
  command find -iname '*'$1 -printf "%P\n"
} &&
_gem() {
  local cur prev special i commands

  commands="$(__gem_commands)"
  COMPREPLY=()

  _get_comp_words_by_ref cur prev

  for (( i=0; i < ${#COMP_WORDS[@]}-1; i++ )); do
    if [[ ${COMP_WORDS[i]} == @(build|push|*.gem*) ]]; then
      special=${COMP_WORDS[i]}
    fi
  done

  case $special in
    build)
      COMPREPLY=( $(compgen -W "$(__gem_find .gemspec)" -- "$cur") )
      return 0
      ;;
    push)
      COMPREPLY=( $(compgen -W "$(__gem_find .gem)" -- "$cur") )
      return 0
      ;;
    *.gemspec)
      special=build
      ;;
    *.gem)
      special=push
      ;;
  esac

  case $prev in
    gem*|help)
      COMPREPLY=( $(compgen -W "${commands}" -- "$cur") )
      return 0
      ;;
    ${commands// /|})
      COMPREPLY=()
      return 0
      ;;
  esac

  if [[ $cur == -* ]]; then
    COMPREPLY=( $(compgen -W "$(__gem_options ${special:-$prev})" -- $cur) )
  else
    COMPREPLY=()
  fi

  return 0

} && complete -F _gem gem

# vim: ts=2 sw=2 et filetype=sh
