#!/usr/bin/env ruby

require "optparse"
require "webrick"

@program = File.basename(__FILE__)
@trace   = false

ARGV.options do |arguments|
  logfile = "/dev/null"
  config  = {
    :Ip           => "0.0.0.0",
    :Port         => "9000",
    :DocumentRoot => "."
  }

  arguments.summary_indent = "  "
  arguments.summary_width  = 24
  arguments.banner = <<-end_banner.gsub(/^[ ]{4}/, '')
    WEBrick v#{WEBrick::VERSION}

    Usage:
      #{@program} [options]

  end_banner

  arguments.separator "Global options:"

  arguments.on("-t", "--trace", nil, "Trace results") do
    @trace = true
  end

  arguments.on("-i,--host-ip", String, "Listen on host (default: #{config[:Ip]})") do |ip|
    puts "#{__LINE__}: Configuring Ip to #{ip}" if @trace
    config[:Ip] = ip
  end

  arguments.on("-p,--port", String, "Use port (default: #{config[:Port]})") do |port|
    puts "#{__LINE__}: Configuring port to #{port}" if @trace
    config[:Port] = port
  end

  arguments.on("-d,--sharedir", String, "Use directory (default: #{config[:DocumentRoot]})") do |dir|
    puts "#{__LINE__}: Configuring shared directory to #{dir}" if @trace
    config[:DocumentRoot] = dir
  end

  arguments.on("-l,--log", String, "Use I/O log (default: #{config[:Logger]})") do |file|
    puts "#{__LINE__}: Configuring log file to #{file}" if @trace
    logfile = file
  end

  unless ARGV.empty?
    arguments.parse!
  else
    puts arguments
    exit 0
  end

  begin
    config[:Logger] = WEBrick::Log::new(logfile, 7)
    server = WEBrick::HTTPServer.new(config)
    thread = Thread.new { server.start }
    trap "INT" do
      server.shutdown
    end
    thread.join
  rescue Exception => error
    puts "Error : #{error.class}: #{error.message}"
    if @trace
      puts error.backtrace
    end
    exit 1
  end
end

